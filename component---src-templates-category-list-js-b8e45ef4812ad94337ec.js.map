{"version":3,"sources":["webpack:///./src/components/postSummary.js","webpack:///./src/templates/category-list.js"],"names":["Article","styled","article","PostSummary","render","node","this","props","key","fields","slug","style","marginBottom","rhythm","display","justifyContent","alignContent","flexWrap","marginTop","boxShadow","to","frontmatter","category","title","className","date","Math","floor","readingTime","words","minutes","gridTemplateColumns","fluid","image","childImageSharp","alt","marginRight","minWidth","maxWidth","color","dangerouslySetInnerHTML","__html","description","excerpt","charAt","toUpperCase","slice","tags","length","map","t","join","React","Component","CategoryList","data","pageContext","allMarkdownRemark","siteTitle","site","siteMetadata","location","id","textAlign","edges","query"],"mappings":"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","file":"component---src-templates-category-list-js-b8e45ef4812ad94337ec.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nimport styled from \"styled-components\"\n\nimport { rhythm } from \"../utils/typography\"\nimport Image from \"gatsby-image\"\nimport { Minutes } from \"../templates/blog-post\"\n\nconst Article = styled.article`\n  .date {\n    width: 100%;\n  }\n`\n\nexport default class PostSummary extends React.Component {\n  static propTypes = {\n    node: PropTypes.object.isRequired,\n  }\n\n  render() {\n    const { node } = this.props\n    return (\n      <Article key={node.fields.slug} style={{ marginBottom: rhythm(2) }}>\n        <header\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignContent: \"bottom\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <h3\n            style={{\n              marginTop: 0,\n              marginBottom: rhythm(1 / 4),\n            }}\n          >\n            <Link\n              style={{ boxShadow: `none` }}\n              to={`/${node.frontmatter.category}${node.fields.slug}`}\n            >\n              {node.frontmatter.title}\n            </Link>\n          </h3>\n          <div className=\"date\">\n            <small>{node.frontmatter.date}</small>\n            <Minutes>\n              <div className=\"sizer\">\n                <small>\n                  {Math.floor(node.fields.readingTime.words / 100) * 100} words\n                </small>\n              </div>\n              <div className=\"min\">\n                <small>\n                  {Math.floor(node.fields.readingTime.minutes * 0.8)} min\n                </small>\n              </div>\n              <div className=\"word\">\n                <small>\n                  {Math.floor(node.fields.readingTime.words / 100) * 100} words\n                </small>\n              </div>\n            </Minutes>\n          </div>\n        </header>\n        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 3fr\" }}>\n          <Link\n            style={{ boxShadow: `none` }}\n            to={`/${node.frontmatter.category}${node.fields.slug}`}\n          >\n            <Image\n              fluid={node.frontmatter.image.childImageSharp.fluid}\n              alt={node.frontmatter.title}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                maxWidth: 300,\n              }}\n            />\n          </Link>\n          <section>\n            <Link\n              style={{ boxShadow: `none`, color: \"#000\" }}\n              to={`/${node.frontmatter.category}${node.fields.slug}`}\n            >\n              <p\n                style={{ marginBottom: rhythm(0.25) }}\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </Link>\n          </section>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            display: \"none\",\n            justifyContent: \"flex-end\",\n            marginTop: rhythm(1 / 4),\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          <div>\n            <small>\n              {node.frontmatter.category.charAt(0).toUpperCase() +\n                node.frontmatter.category.slice(1)}\n            </small>\n          </div>\n          <div>\n            <small>\n              {node.frontmatter.tags &&\n                node.frontmatter.tags.length > 0 &&\n                `tags: ${node.frontmatter.tags\n                  .map(t => t.charAt(0).toUpperCase() + t.slice(1))\n                  .join(\", \")}`}\n            </small>\n          </div>\n        </div>\n        <hr />\n      </Article>\n    )\n  }\n}\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostSummary from \"../components/postSummary\"\n\nclass CategoryList extends React.Component {\n  render() {\n    const { data } = this.props\n    const { category } = this.props.pageContext\n    const { allMarkdownRemark, site } = data\n    const siteTitle = site.siteMetadata.title || null\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={siteTitle} />\n        <div className=\"right\" id=\"posts\">\n          <h1 style={{ textAlign: \"center\" }}>\n            {category.charAt(0).toUpperCase() + category.slice(1)} Articles\n          </h1>\n          <ul>\n            {allMarkdownRemark.edges.map(({ node }) => {\n              return <PostSummary node={node} />\n            })}\n          </ul>\n\n          <hr />\n          <div id=\"background\">\n            <Bio />\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query CategoryListQuery($ids: [String]!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { id: { in: $ids }, frontmatter: { published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              minutes\n              words\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            category\n            tags\n            published\n            image {\n              childImageSharp {\n                fluid(maxWidth: 300, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default CategoryList\n"],"sourceRoot":""}